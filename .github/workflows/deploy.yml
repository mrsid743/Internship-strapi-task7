name: Deploy Strapi to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: siddhant-strapi
  TF_WORKING_DIR: ./terraform

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC if you switch back
      contents: read  # Required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_image_tag: ${{ steps.build-image.outputs.image_tag }}
          TF_VAR_ecr_repo_url: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_admin_jwt_secret: ${{ secrets.ADMIN_JWT_SECRET }}
          TF_VAR_api_token_salt: ${{ secrets.API_TOKEN_SALT }}
          TF_VAR_app_keys: ${{ secrets.APP_KEYS }}
        run: terraform plan -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        env:
          # --- THIS IS THE CORRECTED BLOCK ---
          # We must pass ALL secrets to the apply step as well.
          TF_VAR_image_tag: ${{ steps.build-image.outputs.image_tag }}
          TF_VAR_ecr_repo_url: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_admin_jwt_secret: ${{ secrets.ADMIN_JWT_SECRET }}
          TF_VAR_api_token_salt: ${{ secrets.API_TOKEN_SALT }}
          TF_VAR_app_keys: ${{ secrets.APP_KEYS }}
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

