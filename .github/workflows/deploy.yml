# .github/workflows/deploy.yml

name: Deploy Strapi to AWS ECS

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main

# Define environment variables
env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: siddhant-strapi # Your pre-existing ECR repository name
  TF_WORKING_DIR: ./terraform

jobs:
  deploy:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for authenticating with AWS using OIDC
      contents: read # Required to checkout the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials from OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_TO_ASSUME }} # GitHub secret
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./strapi-app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0 # Specify a Terraform version

      - name: Terraform Init
        id: init
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} init

      - name: Terraform Plan
        id: plan
        run: |
          terraform -chdir=${{ env.TF_WORKING_DIR }} plan \
            -var="image_tag=${{ steps.build-image.outputs.image_tag }}" \
            -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: |
          terraform -chdir=${{ env.TF_WORKING_DIR }} apply \
            -auto-approve \
            -var="image_tag=${{ steps.build-image.outputs.image_tag }}"
